defaults:
  - _self_
  - planner: cem
  - override hydra/launcher: submitit_slurm

hydra:
  run:
    dir: plan_outputs/${now:%Y%m%d%H%M%S}_${replace_slash:${model_name}}_gH${goal_H}
  sweep:
    dir: plan_outputs/${now:%Y%m%d%H%M%S}_${replace_slash:${model_name}}_gH${goal_H}
    subdir: ${hydra.job.num}
  launcher:
    submitit_folder: ${hydra.sweep.dir}/.submitit/%j
    nodes: 1
    tasks_per_node: 1
    cpus_per_task: 16
    mem_gb: 256
    gres: "gpu:h100:1"
    qos: "explore"
    timeout_min: 720
    setup: ["export DEBUGVAR=$(scontrol show hostnames $SLURM_JOB_NODELIST)",
            export MASTER_ADDR="$(scontrol show hostnames $SLURM_JOB_NODELIST | head -n 1)",
            "export MASTER_PORT=$(for port in $(shuf -i 30000-65500 -n 20); do if [[ $(netstat -tupln 2>&1 | grep $port | wc -l) -eq 0 ]] ; then echo $port; break; fi; done;)",]

# model to load for planning
ckpt_base_path: /brtx/604-nvme1/jyu48/dino_wm_data/check_point/outputs/2025-03-06 # put absolute path here. Checkpoints will be loaded from ${ckpt_base_path}
# python plan.py model_name=18-41-43 planner.opt_steps=30
model_name: null
model_epoch: latest

seed: 34
n_evals: 5
goal_source: 'text_goal' # 'random_state' or 'dset' or 'random_action' or 'text_goal'
goal_H: 5 # specifies how far away the goal is if goal_source is 'dset'
n_plot_samples: 10
text_goal: True # set to true to use text-based goals (only works with goal_source='text_goal')

debug_dset_init: False

objective:
  _target_: planning.objectives.create_objective_fn
  alpha: 1
  base: 2 # coeff base for weighting all frames. Only applies when mode == 'all'
  mode: last
